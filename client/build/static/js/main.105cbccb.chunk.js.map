{"version":3,"sources":["components/Header.js","components/HomePage.js","components/AboutPage.js","components/Slideshow.js","components/ProjectPage.js","components/SchedulePage.js","components/Login.js","components/LoginPage.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","id","className","href","type","Component","HomePage","src","alt","AboutPage","style","margin-top","target","slideshowPictures","mySlides1","1","text","orientation","2","3","4","5","6","mySlides2","Slideshow","props","_this","call","state","curIndex","curSrc","slides","curText","handleLeftClick","bind","assertThisInitialized","handleRightClick","leftIndex","Number","toString","setState","rightIndex","keys","length","onClick","ProjectPage","Slideshow_Slideshow","marginTop","SchedulePage","message","textareaArray","data","handleTextareaChange","handleSaveButtonClick","loginId","_this2","$","removeClass","fetch","then","res","json","newArray","i","push","event","concat","localStorage","setItem","getItem","console","log","resjson","document","ready","attr","window","addEventListener","set","_this3","endpoint","param","array","e","newEvent","map","day","toConsumableArray","_this4","fontSize","index","digitClass","onChange","disabled","Login","username","password","handleUsernameInput","handlePasswordInput","handleLoginClick","handleRegisterClick","html","bcrypt","err","salt","hash","method","SchedulePage_SchedulePage","placeholder","textAlign","LoginPage","Login_Login","Footer","App","Header_Header","BrowserRouter","Switch","Route","exact","path","component","Redirect","from","to","Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","App_App","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.105cbccb.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './stylesheets/Header.css';\r\n\r\n// Component to render header\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n          <nav>\r\n              <h1> CAMBRIDGE GURDWARA </h1>\r\n              <div id = \"topRight\">\r\n                  <ul>\r\n                      <li > <a className = \"orangeHover\" href = \"/home\"> HOME </a> </li>\r\n                      <li> <a className = \"orangeHover\" href = \"/about\"> ABOUT </a> </li>\r\n                      <li> <a className = \"orangeHover\" href = \"/project\"> PROJECT UPDATES </a> </li>\r\n                      <li> <a className = \"orangeHover\" href = \"/schedule\"> SCHEDULE </a> </li>\r\n                      <li > <a href = \"/login\"> <button id = \"buttonEffect\"  type = \"button\"> Login </button> </a> </li>\r\n                  </ul>\r\n              </div>\r\n          </nav>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './stylesheets/styleSheet.css';\r\n\r\n// Component to render Home Page\r\nexport class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div className = \"body\">\r\n          {/* Header Picture */}\r\n          <img className = \"headerPic\" src = \"cambridgeGurdwaraHeaderPic.jpg\" alt = \"Picture of Cambridge Gurdwara Design\"/>\r\n          {/* Page Heading */}\r\n          <div className = \"homePageHeaderTitle\">\r\n              <h1 className = \"centerText test\"> Sri Guru Singh Sabha Cambridge </h1>\r\n              <h4 className = \"centerText\">\r\n                  1070 Townline Road, Cambridge, Ontario <br/>\r\n                  (519) 658-1070\r\n              </h4>\r\n          </div>\r\n          {/* Place to insert google maps api */}\r\n          <div id=\"map\"></div>\r\n          {/* Learn More Grid */}\r\n          <div id = \"big\" className = \"imageContainer\">\r\n              <h3 className = \"head1 headRow\"> Gurdwara </h3>\r\n              <h3 className = \"head2 headRow\"> Cambridge, Ontario </h3>\r\n              <h3 className = \"head3 headRow\"> Project Updates </h3>\r\n              <div className = \"innerContainer1\">\r\n                  <img className = \"imageRow img1\" src = \"harmandirSahibPic.png\" alt = \"Picture of Harminder Sahib\"/>\r\n                  <div className = \"learn1 learnRow\"> LEARN MORE </div>\r\n              </div>\r\n              <div className = \"innerContainer2\">\r\n                  <img className = \"imageRow img2\" src = \"cambridgePic.png\" alt = \"Picture of Cambridge, Ontario\"/>\r\n                  <div className = \"learn2 learnRow\"> LEARN MORE </div>\r\n              </div>\r\n              <div className = \"innerContainer3\">\r\n                  <img className = \"imageRow img3\" src = \"constPic1.png\" alt = \"Picture of Gurdwara Construction\"/>\r\n                  <div className = \"learn3 learnRow\"> LEARN MORE </div>\r\n              </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './stylesheets/styleSheet.css';\r\n\r\n// Component to render About Page\r\nexport class AboutPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className = \"body\">\r\n          {/* Header Picture*/}\r\n          <img className = \"headerPic\" src = \"harmandirSahibHeaderPic.jpg\" alt = \"Picture of Harmandir Sahib\"/>\r\n          {/* Main Heading*/}\r\n          <h1 className = \"inPicHeading\"> GURDWARA </h1>\r\n          {/* Body Text*/}\r\n          <div className = \"textContainer\">\r\n              <h2 className = \"centerText\"> What is a Gurdwara? </h2>\r\n\r\n              <p className = \"centerText\">A gurdwara is defined as a place of worship for Sikhs. The literal meaning of the word \"Gurdwara\" is a gateway to which the guru could be reached or \"the door that leads to the guru\".</p>\r\n\r\n              <h2 className = \"centerText\"> The Purpose of a Gurdwara </h2>\r\n\r\n              <ol>\r\n                  <li> To learn spiritual wisdom taught by Sri Guru Granth Sahib Ji </li>\r\n                  <li> Gurdwaras are home to many Sikh religious ceremonies. </li>\r\n                  <li> Gurdwaras can teach children about the Sikh faith, ethics, customs, traditions, and text. </li>\r\n                  <li> A Gurdwara also acts as a community centre and offers food, shelter, and companionship to whoever is in need, from any religion or background. </li>\r\n                  <li> A Gurdwara can also act as a hub to which the Sikh population can give back to the community to which it resides through volunteer and charity. </li>\r\n              </ol>\r\n          </div>\r\n\r\n          <img className = \"headerPic\" src = \"cambridgeHeaderPic.jpg\" alt = \"Picture of Cambridge\" style={{\"margin-top\": 75}}/>\r\n\r\n          <div className = \"textContainer\" id = \"widerPara\">\r\n\r\n              <h2 className = \"centerText\"> Cambridge, Ontario </h2>\r\n\r\n              <p>\r\n                  Located accessibly off highway 401, the city of Cambridge has witnessed great growth over the last couple of decades. Under 100 km west of the Greater Toronto Area, and next door to the technology hub of Waterloo Ontario, Cambridge is poised for further growth in population and industry. The Sikh community has also been apart of this growth. With a small town feel, Cambridge offers families a sense of comfort, security, belonging, and peace. The Sikh population has grown tremendously in Cambridge within the last 10 years, and is in a position to grow further in the next coming years. The Sikh community in Cambridge is dedicated in building a new home for Sri Guru Granth Sahib Ji that will be able meet the needs of the growing population.\r\n                  <br/> <br/> For further information to our beloved city feel free to click on the following images:\r\n              </p>\r\n\r\n              {/* Image Grip Container */}\r\n              <div className = \"imageContainer\">\r\n                <a href = \"https://www.cambridge.ca/en/index.aspx\" target = \"_blank\"> <img className = \"imageRow img1\" src = \"cambridgeLogoPic.jpg\" alt = \"Picture of cambridge.ca Logo\"/> </a>\r\n                <a href = \"http://visitcambridgeontario.com/\" target = \"_blank\"> <img className = \"imageRow img2\" src = \"visitCambridgeOntarioLogoPic.png\" alt = \"Picture of visitcambridgeontario.com Logo\"/> </a>\r\n                <a href = \"https://www.cambridgetimes.ca/\" target = \"_blank\"> <img className = \"imageRow img3\" src = \"cambridgeTimesLogoPic.png\" alt = \"Picture of Cambridge Times Logo\"/> </a>\r\n              </div>\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './stylesheets/Slideshow.css';\r\n\r\n// Object to hold image details (index, src, desciption, orientation) and group images together\r\nconst slideshowPictures = {\r\n  mySlides1: {\r\n    '1': {\r\n      src: 'constPic2.jpg',\r\n      text: 'Concrete has been poured on front spiral staircase.',\r\n      orientation: 'portrait'\r\n    },\r\n    '2': {\r\n      src: 'constPic3.jpg',\r\n      text: 'Concrete has been poured on front spiral staircase.',\r\n      orientation: 'portrait'\r\n    },\r\n    '3': {\r\n      src: 'constPic4.jpg',\r\n      text: 'Main entrance front wall installation.',\r\n      orientation: 'landscape'\r\n    },\r\n    '4': {\r\n      src: 'constPic5.jpg',\r\n      text: 'Main entrance front wall installation.',\r\n      orientation: 'landscape'\r\n    },\r\n    '5': {\r\n      src: 'constPic6.jpg',\r\n      text: 'Geothermal installation.',\r\n      orientation: 'portrait'\r\n    },\r\n    '6': {\r\n      src: 'constPic7.jpg',\r\n      text: 'Ramp installation to langhar hall.',\r\n      orientation: 'portrait'\r\n    },\r\n  },\r\n  mySlides2: {\r\n    '1': {\r\n      src: 'constPic8.jpg',\r\n      text: 'Back staircase sweeping.',\r\n      orientation: 'landscape'\r\n    },\r\n    '2': {\r\n      src: 'constPic9.jpg',\r\n      text: 'Floor installation.',\r\n      orientation: 'portrait'\r\n    },\r\n    '3': {\r\n      src: 'constPic10.jpg',\r\n      text: 'Floor installation.',\r\n      orientation: 'portrait'\r\n    }\r\n  }\r\n};\r\n\r\n// Component to render image slideshow\r\nexport class Slideshow extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    // Set inital slide for each slideshow instance\r\n    this.state = {\r\n      curIndex: '1',\r\n      curSrc: slideshowPictures[this.props.slides]['1'].src,\r\n      curText: slideshowPictures[this.props.slides]['1'].text\r\n    }\r\n    // Bind this to the event handlers\r\n    this.handleLeftClick = this.handleLeftClick.bind(this);\r\n    this.handleRightClick = this.handleRightClick.bind(this);\r\n  }\r\n\r\n  // Event handler for LEFT Button Click\r\n  handleLeftClick() {\r\n    // Check bounds of slideshow to check if there is an image in the slides object before the current slide\r\n    let leftIndex = Number(this.state.curIndex);\r\n    if(leftIndex >= 2){\r\n      (--leftIndex).toString(10);\r\n      // Change Current Image Slide\r\n      this.setState({\r\n        curIndex: leftIndex,\r\n        curSrc: slideshowPictures[this.props.slides][leftIndex].src,\r\n        curText: slideshowPictures[this.props.slides][leftIndex].text\r\n      });\r\n    }\r\n  }\r\n\r\n  // Event handler for RIGHT Button Click\r\n  handleRightClick() {\r\n    // Check bounds of slideshow to check if there is an image in the slides object before the current slide\r\n    let rightIndex = Number(this.state.curIndex);\r\n    if(rightIndex <= Object.keys(slideshowPictures[this.props.slides]).length - 1){\r\n      (++rightIndex).toString(10);\r\n      // Change Current Image Slide\r\n      this.setState({\r\n        curIndex: rightIndex,\r\n        curSrc: slideshowPictures[this.props.slides][rightIndex].src,\r\n        curText: slideshowPictures[this.props.slides][rightIndex].text\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className = \"slideshow-container\">\r\n        {/* Display Current Image Index */}\r\n        <div className = \"numbertext\">{this.state.curIndex} / {Object.keys(slideshowPictures[this.props.slides]).length}</div>\r\n        {/* Display Current Image */}\r\n        <div className = {slideshowPictures[this.props.slides][this.state.curIndex]['orientation']}><img src = {this.state.curSrc}/></div>\r\n        {/* Display Current Image Desciption */}\r\n        <div className = \"text\"> {this.state.curText} </div>\r\n        {/* Left and Right buttons */}\r\n        <a className = \"prev\" onClick = {this.handleLeftClick}>&#10094;</a>\r\n        <a className = \"next\" onClick = {this.handleRightClick}>&#10095;</a>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Slideshow} from \"./Slideshow.js\"\r\nimport './stylesheets/styleSheet.css';\r\n\r\n// Component to render Project Page\r\nexport class ProjectPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className = \"body\">\r\n          {/* Header Picture */}\r\n          <img className = \"headerPic\" src = \"constructionWallpaper.jpg\" alt = \"Picture of Construction Worker Holding Hard Hat\"/>\r\n\r\n          {/* Main Heading */}\r\n          <h1 className = \"inPicHeading\"> Project Updates </h1>\r\n\r\n          {/* Body Text */}\r\n          <div className = \"textContainer\">\r\n\r\n              <h2 className = \"centerText\"> Cambridge Gurdwara Updated Construction Pictures </h2>\r\n              <h5 className = \"centerText\"> Cambridge Gurdwara - November 23, 2016</h5>\r\n              <p> <strong> Waheguru Ji Ka Khalsa Waheguru Ji Ki Fateh </strong> <br/> <br/>\r\n                  Sadh Sangat Ji, <br/> <br/>\r\n                  Here are some updated images from inside Guru Ghar taken on Sunday November 20th. As mentioned in the previous update, we can always use volunteers every Sunday for clean up related help.\r\n              </p>\r\n\r\n          </div>\r\n\r\n          {/* Call Slideshow JS Component */}\r\n          <Slideshow slides = \"mySlides1\" />\r\n\r\n          <div className = \"textContainer\" style = {{\"marginTop\": 50}}>\r\n\r\n              <p>\r\n                  We will continue to provide updates and new images on Guru Ghar as they occur. Please continue to check this website for new updates.\r\n                  <br/> <br/> <strong > Waheguru Ji Ka Khalsa Waheguru Ji Ki Fateh </strong>\r\n              </p>\r\n\r\n          </div>\r\n\r\n          {/* Body Text */}\r\n          <div className = \"textContainer\">\r\n\r\n              <h2 className = \"centerText\"> Volunteers Needed For Weekly Sunday Clean Up </h2>\r\n              <h5 className = \"centerText\"> Cambridge Gurdwara - October 23, 2016</h5>\r\n              <p> <strong > Waheguru Ji Ka Khalsa Waheguru Ji Ki Fateh </strong> <br/> <br/>\r\n                  Sadh Sangat Ji, <br/> <br/>\r\n                  The construction work has begun and we are now requesting and requiring volunteers to help with a weekly clean up. This allows us to save money as we will be doing clean up seva ourselves instead of hiring a contractor for cleaning labour. Weekly clean ups will occur every Sunday at guru khar.\r\n                  <br/> <br/> Please feel free to share this website link with Sadh Sangat ji members to spread the work and get more volunteers. Here are a few images from today's clean up.\r\n              </p>\r\n\r\n          </div>\r\n\r\n          {/* Call Slideshow JS Component */}\r\n          <Slideshow slides = \"mySlides2\" />\r\n\r\n          {/* Body Text */}\r\n          <div className = \"textContainer\">\r\n\r\n              <h2 className = \"centerText\"> Construction beginning Oct 9, 2016 </h2>\r\n              <h5 className = \"centerText\"> Cambridge Gurdwara - October 5, 2016</h5>\r\n              <p>\r\n                  <strong > Waheguru Ji Ka Khalsa Waheguru Ji Ki Fateh </strong> <br/> <br/>\r\n                  Sadh Sangat Ji, <br/> <br/>\r\n                  We are happy to tell you that the work to finish our Gurudwara will start again on Sunday October 9, 2016. We hope that all of our Sangat can join us at the Gurughar on Sunday when we join together in Ardaas to start our project up again.  We will officially hand the key to our new builder, SKC Construction.  Following this will be the start of Sehaj Paath as we continue with our project.\r\n                  <br/> <br/> We hope that all of our Sangat and their family members will join us at 11am at our Gurudwara Sahib as we move forward with our project.\r\n                  <br/> <br/> Thank you to everyone for your continued support.\r\n                  <br/> <br/> <br/> <strong > Waheguru Ji Ka Khalsa Waheguru Ji Ki Fateh </strong>\r\n              </p>\r\n\r\n          </div>\r\n\r\n          <div className = \"textContainer\">\r\n\r\n              <h2 className = \"centerText\"> Building Committee </h2>\r\n              <h5 className = \"centerText\"> Cambridge Gurdwara - January 24, 2016</h5>\r\n              <p>\r\n                  Dec 4th, 2015 <br/> <br/>\r\n                  The Operations Committee has asked the Building Committee to provide the Sangat an update. Please find this message below.\r\n                  <br/> <br/> <strong > Waheguru Ji Ka Khalsa Waheguru Ji Ki Fateh </strong> <br/> <br/>\r\n                  A General Body Meeting was held with the membership on Sunday November 22nd, 2015.  During this meeting, the membership in attendance recognized that an impasse had been reached by the Operations Committee with regards to how to proceed with completing the construction project of our new Gurdwara.  A motion was put forward to select a Building Committee in order to complete what remains of our project.  The motion to select a new Building Committee passed and the following seven members volunteered to assist with this project:\r\n              </p>\r\n              <ul>\r\n                  <li> Manmohan Singh Sandhu </li>\r\n                  <li> Daljit Singh Brar </li>\r\n                  <li> Harvinder Singh </li>\r\n                  <li> Irindeep Kaur Badial </li>\r\n                  <li> Jasbir Singh Cheema </li>\r\n                  <li> Jasvir Singh Sadhra </li>\r\n                  <li> Kulbir Singh Tutt </li>\r\n              </ul>\r\n              <p>\r\n                  Another motion was passed, giving these individuals the support of the membership and Sangat in order to complete the project that is already underway. <br/> <br/>\r\n                  The new Building Committee appreciates the support that they have already been given and the efforts put forth by the Operations Committee and Sangat.  Please contact any member of the Building Committee if you have any questions.\r\n                  <br/> <br/> <strong > Waheguru Ji Ka Khalsa Waheguru Ji Ki Fateh </strong>\r\n              </p>\r\n\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\nimport './stylesheets/SchedulePage.css';\nimport './stylesheets/styleSheet.css';\nimport $ from 'jquery';\n\n// Component to render Calendar\nexport class SchedulePage extends Component {\n  constructor(props) {\n    super(props);\n    // Set Initial States\n    this.state = {\n      message: '',\n      textareaArray: [],\n      data: {}\n    }\n    // Bind this to the event handlers\n    this.handleTextareaChange = this.handleTextareaChange.bind(this);\n    this.handleSaveButtonClick = this.handleSaveButtonClick.bind(this);\n  }\n\n  // Called before the Schedule is Rendered\n  componentWillMount() {\n    // Remove unnessassary styling\n    $('#body').removeClass('loginBody');\n    // Make Request to fetch the current schedule database\n    fetch('/users')\n      .then(res => res.json())\n      .then(data => this.setState({ data: data }))\n      .then(() => {\n        // Create array to format recieved data\n        let newArray = [];\n        for(let i = 0; i < 28; i++) {\n          newArray.push({id: this.state.data[i].id, text: this.state.data[i].event});\n        }\n        // set state using formated array\n        this.setState({\n          textareaArray: [...newArray]\n        });\n      });\n    // Check if the user has logged in during this session\n    let loginId;\n    if(this.props.id) {\n      localStorage.setItem('loginId', this.props.id);\n      loginId = this.props.id;\n    } else {\n      loginId = Number(localStorage.getItem('loginId'));\n    }\n    // if user has logged in at some point during their session, enable textarea editting\n    console.log(loginId);\n    if(loginId) {\n      fetch(`/users/login-status?id=${loginId}`)\n        .then(res => res.json())\n        .then(resjson => {\n          console.log(resjson);\n          if(resjson) {\n            $(document).ready(() => {\n              $('textarea').attr('disabled', false);\n            });\n          }\n        });\n    }\n    // Add event listener to automatically log user out on exit, reload, etc.\n    window.addEventListener(\"beforeunload\", () => {\n      // fetch request to change login status\n      fetch(`/users/update-login-status?id=${loginId}`)\n        .then( () => localStorage.set(\"loginId\", 0));\n    })\n  }\n\n  // Make put request to Update Database when SAVE button is clicked\n  handleSaveButtonClick() {\n    let endpoint = $.param({ array: this.state.textareaArray });\n    fetch(`/users/update-event?${endpoint}`)\n      .then( res => res.json())\n      .then( message => {\n        this.setState({ message: message })\n      });\n  }\n\n  // Event handler to automatically update the text entered inside the textarea\n  handleTextareaChange(e) {\n    // Make a formated array with updated events\n    let newEvent = this.state.textareaArray.map(day => {\n      if(day.id === Number(e.target.id)) {\n        return {\n          id: Number(e.target.id),\n          text: e.target.value\n        }\n      } else {\n        return {\n          id: day.id,\n          text: day.text\n        }\n      }\n    });\n    // Set the state\n    this.setState({\n      textareaArray: [...newEvent]\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"body\">\n\n        {/* Header Picture*/}\n        <img className = \"headerPic\" src = \"clockWallpaper.jpg\" alt = \"Picture of Harmandir Sahib\"/>\n\n        {/* Main Heading*/}\n        <h1 className = \"inPicHeading\"> SCHEDULE </h1>\n\n        {/* Body Text*/}\n        <div className = \"textContainer\">\n\n            <h2 className = \"centerText\"> Book a program! </h2>\n            <p>\n               To book your program now, please find an available date in the schedule, and contact the Cambridge\n               Gurdwara by calling <strong>(519) 658-1070</strong>, or visiting <strong>1070 Townline Road, Cambridge,\n               Ontario</strong>. The changes in the schedule can be viewed shortly after the booking.\n            </p>\n\n        </div>\n\n    {/* Calendar */}\n\n        {/* Render Month Heading */}\n        <div className=\"month\">\n          <ul>\n            <li className=\"prevMonth\">&#10094;</li>\n            <li className=\"nextMonth\">&#10095;</li>\n            <li>\n              <div>\n                February <br/>\n                <span style={{\"fontSize\":18}}>2019</span>\n              </div>\n            </li>\n          </ul>\n        </div>\n\n        {/* Render weekday Headings */}\n        <ul className=\"weekdays\">\n          <li>Mo</li>\n          <li>Tu</li>\n          <li>We</li>\n          <li>Th</li>\n          <li>Fr</li>\n          <li>Sa</li>\n          <li>Su</li>\n        </ul>\n\n        {/* Iterate through the current textareaArray state to create the days */}\n        <form className=\"days\">\n            {this.state.textareaArray.map((day, index) => {\n              let digitClass = \"\";\n              if(day.id < 10) {\n                digitClass = \"oneDigit\";\n              }\n              return( <li> <span className = {digitClass}>{day.id}</span> <textarea id = {day.id.toString()} type = 'text' value = {day.text} onChange = {this.handleTextareaChange} disabled/> </li> );\n            })}\n        </form>\n\n        {/* SAVE button */}\n        <button className = \"button\" onClick = {this.handleSaveButtonClick}> Save </button>\n\n        {/* Message Displayer */}\n        <h4> {this.state.message} </h4>\n      </div>\n    );\n  }\n}\n","import React, {Component} from 'react';\r\nimport {SchedulePage} from './SchedulePage.js';\r\nimport './stylesheets/Login.css';\r\nimport $ from 'jquery';\r\nimport * as bcrypt from 'bcryptjs';\r\n\r\n// Component to render Login GUI\r\nexport class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    // Set initial user states\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      loginId: null\r\n    }\r\n    // Bind this to the event handlers\r\n    this.handleUsernameInput = this.handleUsernameInput.bind(this);\r\n    this.handlePasswordInput = this.handlePasswordInput.bind(this);\r\n    this.handleLoginClick = this.handleLoginClick.bind(this);\r\n    this.handleRegisterClick = this.handleRegisterClick.bind(this);\r\n  }\r\n\r\n  // Event handler to automatically update the text entered inside the username input\r\n  handleUsernameInput(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  // Event handler to automatically update the text entered inside the password input\r\n  handlePasswordInput(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  // Event handler for when LOGIN button is clicked\r\n  handleLoginClick() {\r\n    // Make request to check if login exists with the entered creditials\r\n    fetch(`/users/login?username=${this.state.username}&password=${this.state.password}`)\r\n      .then(res => res.json())\r\n      .then(resjson => this.setState({ loginId: resjson }))\r\n      .then(() => {\r\n        $(document).ready( () => {\r\n          // Displayer Error Message\r\n          if(!this.state.loginId){\r\n              $(\"#messageArea\").html(\"Invalid Username or Password\");\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  handleRegisterClick() {\r\n    const saltRounds = 10;\r\n    bcrypt.genSalt(saltRounds, (err, salt) => {\r\n      bcrypt.hash(this.state.password, salt, (err, hash) => {\r\n        fetch(`/users/register?username=${this.state.username}&hash=${hash}`, {method: \"POST\"})\r\n          .then(res => res.json())\r\n          .then(resjson => {\r\n            this.setState({\r\n              loginId: resjson\r\n            });\r\n          })\r\n          .then(() => {\r\n            if(!this.state.loginId) {\r\n              let message = \"User Already Exists!\";\r\n              $(document).ready( () => {\r\n                $(\"#messageArea\").html(message);\r\n              });\r\n            }\r\n          });\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // if user hasn't logged in, render login page\r\n    if(!this.state.loginId) {\r\n      return (\r\n        <div className=\"loginbox\">\r\n          <img src=\"avatar.png\" className=\"avatar\"/>\r\n          <h1>Login Here</h1>\r\n          <form>\r\n              <p>Username</p>\r\n              <input type=\"text\" id=\"username\" placeholder=\"Enter Username\" onChange={this.handleUsernameInput} value={this.state.username}/>\r\n              <p>Password</p>\r\n              <input type=\"password\" id=\"password\" placeholder=\"Enter Password\" onChange={this.handlePasswordInput} value={this.state.password}/>\r\n              <div style={{\"textAlign\": \"center\"}}> <a id = \"loginLink\"> <button className = \"button\" type = \"button\" onClick = {this.handleLoginClick}> Login </button> </a> </div>\r\n              <div style={{\"textAlign\": \"center\"}}> <a id = \"loginLink\"> <button className = \"button\" type = \"button\" onClick = {this.handleRegisterClick}> Register </button> </a> </div>\r\n              <div id = \"messageArea\"></div>\r\n          </form>\r\n        </div>\r\n      );\r\n    } else {\r\n      // render Calendar when user logs in with loginStatus props\r\n      return (\r\n        <SchedulePage id = {this.state.loginId} />\r\n      );\r\n    }\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Login} from \"./Login.js\";\r\nimport './stylesheets/styleSheet.css';\r\n\r\n// Component to act as container for login system\r\nexport class LoginPage extends Component {\r\n  render() {\r\n    return (\r\n      <div id = \"body\" className = \"body loginBody\">\r\n        {/* Call Login JS Component */}\r\n        <div><Login /></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport './stylesheets/Footer.css';\r\n\r\n// Component to render footer\r\nexport class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className = \"footer\">\r\n          <div className = \"footerText\">\r\n              1070 Townline Road, Cambridge, Ontario <br/>\r\n              (519) 658-1070\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\nimport {BrowserRouter, Switch, Redirect, Route} from \"react-router-dom\";\n\nimport {Header} from \"./components/Header.js\";\nimport {HomePage} from \"./components/HomePage.js\";\nimport {AboutPage} from \"./components/AboutPage.js\";\nimport {ProjectPage} from \"./components/ProjectPage.js\";\nimport {SchedulePage} from \"./components/SchedulePage.js\";\nimport {LoginPage} from \"./components/LoginPage.js\";\nimport {Footer} from \"./components/Footer.js\";\n\nexport class App extends Component {\n    render() {\n        return (\n          <div>\n            <Header />\n            <BrowserRouter>\n                <Switch>\n                  <Route exact path=\"/home\" component={HomePage} />\n                  <Route path=\"/about\" component={AboutPage} />\n                  <Route path=\"/project\" component={ProjectPage} />\n                  <Route path=\"/schedule\" component={SchedulePage} />\n                  <Route path=\"/login\" component={LoginPage} />\n                  <Redirect from=\"/\" to=\"/home\" />\n                </Switch>\n              </BrowserRouter>\n              <Footer />\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {App} from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}